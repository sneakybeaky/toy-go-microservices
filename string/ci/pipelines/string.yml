resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.8"

resources:
- name: string-service
  type: git
  source:
    uri: https://github.com/sneakybeaky/toy-go-microservices.git
    branch: master
    paths:
    - string/*

- name: stringservice-image
  type: docker-image
  source:
    repository: ((ecr_repo))
    aws_access_key_id: ((aws_ecr_access_key_id))
    aws_secret_access_key: ((aws_ecr_secret_access_key))

- name: kubernetes-production
  type: kubernetes
  source:
    server: ((k8s_api_url))
    namespace: default
    token: ((k8s_token))
    insecure_skip_tls_verify: true

- name: version
  type: semver
  source:
    driver: s3
    bucket: ((aws_s3_bucket_name))
    key: versions/string-service
    access_key_id: ((aws_s3_access_key_id))
    secret_access_key: ((aws_s3_secret_access_key))
    initial_version: 0.0.0

- name: deployment-template
  type: s3
  source:
    bucket: ((aws_s3_bucket_name))
    regexp: k8s/string-service/release-(.*).yaml
    access_key_id: ((aws_s3_access_key_id))
    secret_access_key: ((aws_s3_secret_access_key))

- name: deployed-template
  type: s3
  source:
    bucket: ((aws_s3_bucket_name))
    regexp: k8s/string-service/deployed/release-(.*).yaml
    access_key_id: ((aws_s3_access_key_id))
    secret_access_key: ((aws_s3_secret_access_key))


jobs:
- name: publish-image
  plan:
  - get: string-service
    trigger: true
  - put: version
    params: {bump: patch}
  - put: stringservice-image
    params:
      build: string-service/string
      tag: version/version

- name: k8s-template
  plan:
  - get: version
    passed: [publish-image]
  - get: string-service
    passed: [publish-image]
  - get: stringservice-image
    passed: [publish-image]
    trigger: true
  - task: assemble-template
    file: string-service/string/ci/tasks/assemble-template.yaml
    params:
      DOCKER_IMAGE: ((ecr_repo))
      VERSION_FILE: version/version
      DIGEST_FILE: stringservice-image/digest
  - put: deployment-template
    params:
      file: kubernetes-template/release-*.yaml

- name: deploy
  plan:
  - get: deployment-template
    passed: [k8s-template]
  - put: kubernetes-production
    params:
      kubectl: apply -f deployment-template/release-*.yaml
      wait_until_ready_selector: app=string-service
  - put: deployed-template
    params:
      file: deployment-template/release-*.yaml

